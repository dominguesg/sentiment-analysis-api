{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar isUnifiedHover = require('./helpers').isUnifiedHover;\n\nvar layoutAttributes = require('./layout_attributes');\n\nvar handleHoverModeDefaults = require('./hovermode_defaults');\n\nvar handleHoverLabelDefaults = require('./hoverlabel_defaults');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n  }\n\n  var hoverMode = handleHoverModeDefaults(layoutIn, layoutOut, fullData);\n\n  if (hoverMode) {\n    coerce('hoverdistance');\n    coerce('spikedistance', isUnifiedHover(hoverMode) ? -1 : undefined);\n  }\n\n  var dragMode = coerce('dragmode');\n  if (dragMode === 'select') coerce('selectdirection'); // if only mapbox or geo subplots is present on graph,\n  // reset 'zoom' dragmode to 'pan' until 'zoom' is implemented,\n  // so that the correct modebar button is active\n\n  var hasMapbox = layoutOut._has('mapbox');\n\n  var hasGeo = layoutOut._has('geo');\n\n  var len = layoutOut._basePlotModules.length;\n\n  if (layoutOut.dragmode === 'zoom' && ((hasMapbox || hasGeo) && len === 1 || hasMapbox && hasGeo && len === 2)) {\n    layoutOut.dragmode = 'pan';\n  }\n\n  handleHoverLabelDefaults(layoutIn, layoutOut, coerce);\n};","map":null,"metadata":{},"sourceType":"script"}