{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar cleanTicks = require('./clean_ticks');\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nmodule.exports = function handleTickValueDefaults(containerIn, containerOut, coerce, axType) {\n  function readInput(attr) {\n    var v = containerIn[attr];\n    return v !== undefined ? v : (containerOut._template || {})[attr];\n  }\n\n  var _tick0 = readInput('tick0');\n\n  var _dtick = readInput('dtick');\n\n  var _tickvals = readInput('tickvals');\n\n  var tickmodeDefault = isArrayOrTypedArray(_tickvals) ? 'array' : _dtick ? 'linear' : 'auto';\n  var tickmode = coerce('tickmode', tickmodeDefault);\n  if (tickmode === 'auto') coerce('nticks');else if (tickmode === 'linear') {\n    // dtick is usually a positive number, but there are some\n    // special strings available for log or date axes\n    // tick0 also has special logic\n    var dtick = containerOut.dtick = cleanTicks.dtick(_dtick, axType);\n    containerOut.tick0 = cleanTicks.tick0(_tick0, axType, containerOut.calendar, dtick);\n  } else if (axType !== 'multicategory') {\n    var tickvals = coerce('tickvals');\n    if (tickvals === undefined) containerOut.tickmode = 'auto';else coerce('ticktext');\n  }\n};","map":null,"metadata":{},"sourceType":"script"}