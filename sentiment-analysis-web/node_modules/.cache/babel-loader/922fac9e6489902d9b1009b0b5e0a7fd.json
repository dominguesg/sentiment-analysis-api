{"ast":null,"code":"'use strict';\n\nvar svgReg = /<svg\\s([^>\"']|\"[^\"]*\"|'[^']*')*>/;\n\nfunction isSVG(buffer) {\n  return svgReg.test(buffer);\n}\n\nvar extractorRegExps = {\n  'root': svgReg,\n  'width': /\\swidth=(['\"])([^%]+?)\\1/,\n  'height': /\\sheight=(['\"])([^%]+?)\\1/,\n  'viewbox': /\\sviewBox=(['\"])(.+?)\\1/\n};\nvar units = {\n  'cm': 96 / 2.54,\n  'mm': 96 / 2.54 / 10,\n  'm': 96 / 2.54 * 100,\n  'pt': 96 / 72,\n  'pc': 96 / 72 / 12,\n  'em': 16,\n  'ex': 8\n};\n\nfunction parseLength(len) {\n  var m = /([0-9.]+)([a-z]*)/.exec(len);\n\n  if (!m) {\n    return undefined;\n  }\n\n  return Math.round(parseFloat(m[1]) * (units[m[2]] || 1));\n}\n\nfunction parseViewbox(viewbox) {\n  var bounds = viewbox.split(' ');\n  return {\n    'width': parseLength(bounds[2]),\n    'height': parseLength(bounds[3])\n  };\n}\n\nfunction parseAttributes(root) {\n  var width = root.match(extractorRegExps.width);\n  var height = root.match(extractorRegExps.height);\n  var viewbox = root.match(extractorRegExps.viewbox);\n  return {\n    'width': width && parseLength(width[2]),\n    'height': height && parseLength(height[2]),\n    'viewbox': viewbox && parseViewbox(viewbox[2])\n  };\n}\n\nfunction calculateByDimensions(attrs) {\n  return {\n    'width': attrs.width,\n    'height': attrs.height\n  };\n}\n\nfunction calculateByViewbox(attrs) {\n  var ratio = attrs.viewbox.width / attrs.viewbox.height;\n\n  if (attrs.width) {\n    return {\n      'width': attrs.width,\n      'height': Math.floor(attrs.width / ratio)\n    };\n  }\n\n  if (attrs.height) {\n    return {\n      'width': Math.floor(attrs.height * ratio),\n      'height': attrs.height\n    };\n  }\n\n  return {\n    'width': attrs.viewbox.width,\n    'height': attrs.viewbox.height\n  };\n}\n\nfunction calculate(buffer) {\n  var root = buffer.toString('utf8').match(extractorRegExps.root);\n\n  if (root) {\n    var attrs = parseAttributes(root[0]);\n\n    if (attrs.width && attrs.height) {\n      return calculateByDimensions(attrs);\n    }\n\n    if (attrs.viewbox) {\n      return calculateByViewbox(attrs);\n    }\n  }\n\n  throw new TypeError('invalid svg');\n}\n\nmodule.exports = {\n  'detect': isSVG,\n  'calculate': calculate\n};","map":null,"metadata":{},"sourceType":"script"}