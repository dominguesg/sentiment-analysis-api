{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar isosurfaceAttrs = require('../isosurface/attributes');\n\nvar surfaceAttrs = require('../surface/attributes');\n\nvar baseAttrs = require('../../plots/attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar attrs = module.exports = overrideAll(extendFlat({\n  x: isosurfaceAttrs.x,\n  y: isosurfaceAttrs.y,\n  z: isosurfaceAttrs.z,\n  value: isosurfaceAttrs.value,\n  isomin: isosurfaceAttrs.isomin,\n  isomax: isosurfaceAttrs.isomax,\n  surface: isosurfaceAttrs.surface,\n  spaceframe: {\n    show: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: false,\n      description: ['Displays/hides tetrahedron shapes between minimum and', 'maximum iso-values. Often useful when either caps or', 'surfaces are disabled or filled with values less than 1.'].join(' ')\n    },\n    fill: {\n      valType: 'number',\n      role: 'style',\n      min: 0,\n      max: 1,\n      dflt: 1,\n      description: ['Sets the fill ratio of the `spaceframe` elements. The default fill value', 'is 1 meaning that they are entirely shaded. Applying a `fill` ratio less', 'than one would allow the creation of openings parallel to the edges.'].join(' ')\n    }\n  },\n  slices: isosurfaceAttrs.slices,\n  caps: isosurfaceAttrs.caps,\n  text: isosurfaceAttrs.text,\n  hovertext: isosurfaceAttrs.hovertext,\n  hovertemplate: isosurfaceAttrs.hovertemplate\n}, colorScaleAttrs('', {\n  colorAttr: '`value`',\n  showScaleDflt: true,\n  editTypeOverride: 'calc'\n}), {\n  colorbar: isosurfaceAttrs.colorbar,\n  opacity: isosurfaceAttrs.opacity,\n  opacityscale: surfaceAttrs.opacityscale,\n  lightposition: isosurfaceAttrs.lightposition,\n  lighting: isosurfaceAttrs.lighting,\n  flatshading: isosurfaceAttrs.flatshading,\n  contour: isosurfaceAttrs.contour,\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo),\n  showlegend: extendFlat({}, baseAttrs.showlegend, {\n    dflt: false\n  })\n}), 'calc', 'nested');\nattrs.x.editType = attrs.y.editType = attrs.z.editType = attrs.value.editType = 'calc+clearAxisTypes';\nattrs.transforms = undefined;","map":null,"metadata":{},"sourceType":"script"}